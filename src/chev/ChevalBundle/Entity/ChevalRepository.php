<?php

namespace chev\ChevalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ChevalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChevalRepository extends EntityRepository
{
	/**
     * Trouver tous les chevaux par le centre ayant ce gérant
     * 
     * @param User $gerant Le gérant
     *
     * @return Tableau d'entités
     */
    public function findByCentreGerant($gerant) {
        return $this->_em
                ->createQuery('SELECT t FROM chevChevalBundle:Cheval t
                               JOIN t.centre c
                               WHERE c.gerant = :gerant')
                ->setParameter(':gerant', $gerant)
                ->getResult();
    }
    
    /**
     * Trouver un cheval par le centre ayant ce gérant et l'id
     * 
     * @param User $gerant Le gérant
     * @param int $id l'id
     * 
     * @return Entity
     */
    public function findOneByCentreGerant($gerant, $id) {
        return $this->_em
                ->createQuery('SELECT t FROM chevChevalBundle:Cheval t
                               JOIN t.centre c
                               WHERE c.gerant = :gerant
                               AND t.id = :id')
                ->setParameter(':gerant', $gerant)
                ->setParameter(':id', $id)
                ->getOneOrNullResult();
    }

	/**
     * Récupère les informations des chevaux pour le webservice
     * 
     * @return array Les chevaux
     */
    public function WSChevaux($user) {
    	$chevaux =  $this->_em
                ->createQuery('SELECT c.id, c.nom, ce.nom as centre
                               FROM chevChevalBundle:Cheval c
                               JOIN c.centre ce
                               WHERE c.proprietaire = :user
                               ORDER BY c.nom')
				->setParameter(':user', $user)
                ->getResult();
        return $chevaux;
    }
	
	/**
     * Récupère les informations du cheval pour le webservice
     * 
     * @return array Du cheval
     */
    public function WSCheval($user, $id) {
    	try {
    		$cheval =  $this->_em
                ->createQuery('SELECT c.id, c.nom, c.quantite, n.libelle as nourriture ce.nom as centre, p.firstname as prenom_proprio, p.lastname as nom_proprio, c.date
                               FROM chevChevalBundle:Cheval c
                               JOIN c.centre ce
                               JOIN c.nourriture n
                               JOIN c.proprietaire p
                               WHERE c.proprietaire = :user
                               AND c.id = :id')
				->setParameter(':user', $user)
				->setParameter(':id', $id)
                ->getSingleResult();
			if(!empty($cheval)) {
	            $cheval['date'] = $cheval['date']->format('d/m/Y');
	        }
	        return $cheval;
	    }
	    catch (\Doctrine\ORM\NoResultException $e) {
	    	return null;
	    }
    }
}
