<?php

namespace chev\BoxBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CentreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CentreRepository extends EntityRepository
{
    /**
     * Récupère les informations des centres pour le webservice
     * 
     * @return array Les centres
     */
    public function WSCentres() {
        $centres =  $this->_em
                ->createQuery('SELECT c.id, c.nom, c.adresse, c.codePostal, c.ville
                               FROM chevBoxBundle:Centre c
                               ORDER BY c.codePostal')
                ->getResult();
        return $centres;
    }
    
    /**
     * Récupère les informations d'un centre pour le webservice
     * 
     * @return array Le centre
     */
    public function WSCentre($id) {
        $centre =  $this->_em
                ->createQuery('SELECT c.id, c.nom, c.adresse, c.codePostal, c.ville, c.telephone, c.date, c.dateAjout, g.firstname, g.lastname
                               FROM chevBoxBundle:Centre c
                               JOIN c.gerant g
                               WHERE c.id = :id')
                ->setParameter(':id', (int) $id)
                ->getSingleResult();
        if(!empty($centre)) {
            $centre['date'] = $centre['date']->format('d/m/Y');
            $centre['dateAjout'] = $centre['dateAjout']->format('d/m/Y');
        }
        $centre = $this->WSGeolocalisation($centre);
		
        return $centre;
    }
	
	public function WSGeolocalisation($centre) {
		$adresse = (string)$centre['adresse'] . ',' . (string)$centre['ville'] . ',' . (string)$centre['codePostal'];
		$prepAddr = str_replace(' ','+',$adresse);
		$geocode = file_get_contents('http://maps.google.com/maps/api/geocode/json?address='.$prepAddr.'&sensor=false');
		$output = json_decode($geocode);
		
		if (!empty($output->results[0])) {
			$centre['latitude'] = $output->results[0]->geometry->location->lat;
			$centre['longitude'] = $output->results[0]->geometry->location->lng;
		}
		
		return $centre;
	}
}
