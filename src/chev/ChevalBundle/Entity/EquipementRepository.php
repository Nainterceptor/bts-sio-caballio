<?php

namespace chev\ChevalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EquipementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EquipementRepository extends EntityRepository
{
	/**
     * Trouver tous les équipements par le centre ayant ce gérant
     * 
     * @param User $gerant Le gérant
     *
     * @return Tableau d'entités
     */
    public function findByCentreGerant($gerant) {
        return $this->_em
                ->createQuery('SELECT e FROM chevChevalBundle:Equipement e
                               JOIN e.centre c
                               WHERE c.gerant = :gerant')
                ->setParameter(':gerant', $gerant)
                ->getResult();
    }
    
    /**
     * Trouver un équipement par le centre ayant ce gérant et l'id
     * 
     * @param User $gerant Le gérant
     * @param int $id l'id
     * 
     * @return Entity
     */
    public function findOneByCentreGerant($gerant, $id) {
        return $this->_em
                ->createQuery('SELECT e FROM chevChevalBundle:Equipement e
                               JOIN e.centre c
                               WHERE c.gerant = :gerant
                               AND e.id = :id')
                ->setParameter(':gerant', $gerant)
                ->setParameter(':id', $id)
                ->getOneOrNullResult();
    }

	/**
     * Récupère les informations des chevaux pour le webservice
     * 
     * @return array Les chevaux
     */
    public function WSEquipements($user) {
    	$equipement =  $this->_em
                ->createQuery('SELECT e.id, e.libelle
                               FROM chevChevalBundle:Equipement e
                               WHERE e.proprietaire = :user
                               ORDER BY e.libelle')
				->setParameter(':user', $user)
                ->getResult();
        return $equipement;
    }
	
	/**
     * Récupère les informations du cheval pour le webservice
     * 
     * @return array Du cheval
     */
    public function WSEquipement($user, $id) {
    	try {
	    	$equipement =  $this->_em
	                ->createQuery('SELECT e.id, e.libelle, e.dateAjout, c.nom as centre, p.firstname, p.lastname
	                               FROM chevChevalBundle:Equipement e
	                               JOIN e.proprietaire p
	                               JOIN e.centre c
	                               WHERE e.proprietaire = :user
	                               AND e.id = :id')
					->setParameter(':user', $user)
					->setParameter(':id', $id)
	                ->getSingleResult();
			if(!empty($equipement)) {
	            $equipement['dateAjout'] = $equipement['dateAjout']->format('d/m/Y');
	        }
	        return $equipement;
	   	}
	    catch (\Doctrine\ORM\NoResultException $e) {
	    	return null;
	    }
    }
}
